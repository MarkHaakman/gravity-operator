{{- if .Values.tags.gatekeeper }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "gravity-operator.fullname" . }}-gatekeeper
  labels:
    app.kubernetes.io/name: {{ include "gravity-operator.name" . }}-gatekeeper
    helm.sh/chart: {{ include "gravity-operator.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  cases.yaml: |
{{ toYaml .Values.gatekeeper.cases | indent 4 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "gravity-operator.fullname" . }}-gatekeeper
  labels:
    app.kubernetes.io/name: {{ include "gravity-operator.name" . }}-gatekeeper
    helm.sh/chart: {{ include "gravity-operator.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: http
      nodePort: {{ .Values.gatekeeper.service.nodePort }}
  selector:
    app.kubernetes.io/name: {{ include "gravity-operator.name" . }}-gatekeeper
    app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gravity-operator.fullname" . }}-gatekeeper
  labels:
    app.kubernetes.io/name: {{ include "gravity-operator.name" . }}-gatekeeper
    helm.sh/chart: {{ include "gravity-operator.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    checksum/cases: {{ toYaml .Values.gatekeeper.cases | sha256sum }}
spec:
  minReadySeconds: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "gravity-operator.name" . }}-gatekeeper
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "gravity-operator.name" . }}-gatekeeper
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "gravity-operator.fullname" . }}
      restartPolicy: Always
      volumes:
        - name: config
          configMap:
            name: '{{ include "gravity-operator.fullname" . }}-gatekeeper'
      containers:
        - name: gatekeeper
          env:
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: "{{ .Values.gatekeeper.image.repository }}:{{ .Values.gatekeeper.image.tag }}"
          command:
            - "/gravity-gatekeeper"
            - "--api"
            - 'http://{{ include "gravity-operator.fullname" . }}:{{ .Values.operator.service.port }}'
            - "--srcMySQL"
            - "{{ .Values.gatekeeper.mysql.source }}"
            - "--tarMySQL"
            - "{{ .Values.gatekeeper.mysql.target }}"
            - "--chaosInterval"
            - "1m"
          imagePullPolicy: {{ .Values.gatekeeper.image.pullPolicy }}
          volumeMounts:
            - name: config
              mountPath: /etc/gravity
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          {{- if .Values.gatekeeper.resources }}
          resources:
  {{ toYaml .Values.gatekeeper.resources | indent 10 }}
  {{- end }}
  {{- end }}